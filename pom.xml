<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.tui.track.github.activities</groupId>
    <artifactId>track-github-activities</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>track-github-activities</name>
    <description>A RESTful API for tui employee to access github information</description>
    <properties>
        <java.version>11</java.version>
        <spring-boot.version>2.7.0</spring-boot.version>
        <start-class>com.tui.track.github.activities.TrackGithubActivitiesApplication</start-class>
        <build-version>1.0.0</build-version>
        <maven-compiler.version>3.10.1</maven-compiler.version>
        <lombok.version>1.18.24</lombok.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <junit.jupiter.version>5.7.0</junit.jupiter.version>
        <junit-jupiter-migrationsupport.version>5.8.2</junit-jupiter-migrationsupport.version>
        <assertj.version>3.18.1</assertj.version>
        <mocikto-all.version>1.10.19</mocikto-all.version>
        <mockito-junit-jupiter.version>3.6.28</mockito-junit-jupiter.version>
        <mockito.version>4.5.1</mockito.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <maven-surefire.version>3.0.0-M6</maven-surefire.version>
        <springdoc-openapi-ui.version>1.6.8</springdoc-openapi-ui.version>
        <swagger-annotations.version>2.2.0</swagger-annotations.version>
        <jackson-databind-nullable.version>0.2.2</jackson-databind-nullable.version>
        <reactor-spring.version>1.0.1.RELEASE</reactor-spring.version>
        <openpojo.version>0.9.1</openpojo.version>

        <maven-surefire-plugin.version>3.0.0-M6</maven-surefire-plugin.version>
        <google-findbugs.version>3.0.2</google-findbugs.version>

        <!--    Code Quality Checks-->
        <checkstyle.config.location>src/main/resources/checkstyle.xml</checkstyle.config.location>
        <maven-checkstyle.version>3.1.2</maven-checkstyle.version>
        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
        <pmd-plugin.version>3.16.0</pmd-plugin.version>
        <coverage.limit>0.85</coverage.limit>
        <maven-site-plugin.version>3.12.0</maven-site-plugin.version>

        <maven-jxr.version>3.2.0</maven-jxr.version>
        <maven-project-info-reports.version>3.3.0</maven-project-info-reports.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>

        <pitest.version>1.8.0</pitest.version>
        <pitest-junit5.version>0.15</pitest-junit5.version>
        <openapi-generator-maven-plugin.version>5.4.0</openapi-generator-maven-plugin.version>
        <!-- Sonar properties -->
        <sonar.host.url>https://sonarqube.nonprod.tui.com</sonar.host.url>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <org-jacoco-agent.version>0.8.8</org-jacoco-agent.version>
        <sonar.jacoco.reportPaths>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.junit.reportsPaths>${project.build.directory}/surefire-reports</sonar.junit.reportsPaths>
        <owasp.version>7.1.0</owasp.version>

        <!-- monitoring -->
        <micrometer-prometheus.version>1.9.0</micrometer-prometheus.version>

        <!-- wiremock -->
        <wiremock.version>2.27.2</wiremock.version>
        <rest.assured.version>2.9.0</rest.assured.version>
        <cucumber.version>7.3.4</cucumber.version>
        <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
        <skipTests>false</skipTests>
        <dynamicTestSourceDirectory>src/test/java</dynamicTestSourceDirectory>
        <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
        <junit-jupiter-params.version>5.3.2</junit-jupiter-params.version>
        <maven-cucumber-reporting.version>5.7.0</maven-cucumber-reporting.version>
        <mockwebserver.version>4.9.3</mockwebserver.version>
        <okhttp.version>4.9.3</okhttp.version>
        <docker-maven-plugin.version>0.39.1</docker-maven-plugin.version>
        <maven-versions.version>2.11.0</maven-versions.version>
        <docker-auto-create-networks>true</docker-auto-create-networks>
        <docker-wiremock-container-name>wiremock</docker-wiremock-container-name>
        <docker-wiremock-container-port>8445</docker-wiremock-container-port>
        <docker-network-name>track-github-api-network</docker-network-name>
        <docker-service-container-port>8082</docker-service-container-port>
        <docker-service-exposed-port>8082</docker-service-exposed-port>
        <surefire.plugin.argline>-Xmx2048m -noverify</surefire.plugin.argline>

        <revision>0.1</revision>
        <spring-webflux.version>5.3.7</spring-webflux.version>
        <spring-aspects.version>5.3.20</spring-aspects.version>
        <json-smart.version>2.4.8</json-smart.version>

        <netty.version>4.1.74.Final</netty.version>

        <tika-core.version>2.4.0</tika-core.version>
        <commons-io.version>2.11.0</commons-io.version>
        <guava.version>31.1-jre</guava.version>
        <jetty-webapp.version>11.0.9</jetty-webapp.version>

        <logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>

        <fluent-hc.version>4.5.13</fluent-hc.version>
        <sleuth.version>3.1.2</sleuth.version>
        <json-smart.version>2.4.8</json-smart.version>
        <github-api.version>1.303</github-api.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Sleuth automatically adds trace interceptors when in the classpath -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth-dependencies</artifactId>
                <version>${sleuth.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectreactor</groupId>
            <artifactId>reactor-spring</artifactId>
            <version>${reactor-spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.minidev</groupId>
                    <artifactId>json-smart</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${micrometer-prometheus.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <version>${junit-jupiter-migrationsupport.version}</version>
            <scope>test</scope>
        </dependency>
        <!--Sleuth automatically adds trace interceptors when in the classpath -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
            <version>${sleuth.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest-all.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-webapp</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Dependencies for Cucumber Testing with Junit 5 -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit-platform-engine</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest.assured.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${mockwebserver.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>
        <!--    Code Quality tools-->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${org-jacoco-agent.version}</version>
            <classifier>runtime</classifier>
        </dependency>

        <dependency>
            <groupId>com.openpojo</groupId>
            <artifactId>openpojo</artifactId>
            <version>${openpojo.version}</version>
            <scope>test</scope>
        </dependency>

        <!--json structured logging-->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <!--ble in annotation for openapi wecflux generation -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${google-findbugs.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.minidev/json-smart -->
        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>${json-smart.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-webapp -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>${jetty-webapp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring-aspects.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>${fluent-hc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.kohsuke</groupId>
            <artifactId>github-api</artifactId>
            <version>${github-api.version}</version>
        </dependency>

    </dependencies>

    <build>
        <testSourceDirectory>${dynamicTestSourceDirectory}</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd-plugin.version}</version>
                <inherited>false</inherited>
                <configuration>
                    <rulesets>src/main/resources/pmd.xml</rulesets>
                    <excludeFromFailureFile>src/main/resources/pmd.properties</excludeFromFailureFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest-junit5.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <threads>4</threads>
                    <timeoutConstant>8000</timeoutConstant>
                    <maxDependencyDistance>1</maxDependencyDistance>
                    <!--verbose>true</verbose-->
                    <withHistory>true</withHistory>
                    <targetClasses>
                        <param>com.tui.track.github.activities.*</param>
                    </targetClasses>
                    <excludedClasses>
                        <param>com.tui.track.github.activities.TrackGithubActivitiesApplication</param>
                        <param>com.tui.track.github.activities.enums.*</param>
                        <param>com.tui.track.github.activities.constant.*</param>
                        <param>com.tui.track.github.activities.controller.*</param>
                        <param>com.tui.track.github.activities.wrapper.*</param>
                        <param>com.tui.track.github.activities.openapi.*</param>
                    </excludedClasses>
                    <targetTests>
                        <param>com.tui.track.github.activities.*</param>
                    </targetTests>
                    <excludedTestClasses>
                        <param>com.tui.track.github.activities.enums.*</param>
                        <param>com.tui.track.github.activities.constant.*</param>
                        <param>com.tui.track.github.activities.controller.*</param>
                        <param>com.tui.track.github.activities.wrapper.*</param>
                        <param>com.tui.track.github.activities.openapi.*</param>
                    </excludedTestClasses>
                    <avoidCallsTo>
                        <avoidCallsTo>org.slf4j</avoidCallsTo>
                        <avoidCallsTo>com.tui.track.github.activities.openapi</avoidCallsTo>
                    </avoidCallsTo>
                    <mutators>
                        <!--mutator>ALL</mutator-->
                        <mutator>CONSTRUCTOR_CALLS</mutator>
                        <mutator>VOID_METHOD_CALLS</mutator>
                        <mutator>RETURN_VALS</mutator>
                        <mutator>NON_VOID_METHOD_CALLS</mutator>
                    </mutators>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>track-github-activities</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/api/track-github-activities-api-spec.yml
                            </inputSpec>
                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <modelPackage>${project.groupId}.openapi.model</modelPackage>
                            <apiPackage>${project.groupId}.openapi.api</apiPackage>
                            <configOptions>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <artifactVersion>${project.version}</artifactVersion>
                                <bigDecimalAsString>true</bigDecimalAsString>
                                <dateLibrary>java8-localdatetime</dateLibrary>
                                <interfaceOnly>true</interfaceOnly>
                                <java8>true</java8>
                                <useBeanValidation>true</useBeanValidation>
                                <delegatePattern>true</delegatePattern>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>Double=java.math.BigDecimal</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <testSourceDirectory>${dynamicTestSourceDirectory}</testSourceDirectory>
                    <skipTests>${skipTests}</skipTests>
                    <argLine>@{argLine} ${surefire.plugin.argline}</argLine>
                    <!-- Parallel test config -->
                    <forkCount>4</forkCount>
                    <reuseForks>true</reuseForks>
                    <excludes>
                        <exclude>com.tui.track.github.activities.TrackGithubActivitiesApplication.java</exclude>
                        <exclude>com.tui.track.github.activities.openapi.api.ApiUtil.java</exclude>
                        <exclude>com.tui.track.github.activities.openapi.api.V1Api.java</exclude>
                        <exclude>com.tui.track.github.activities.constant.APIMessages.java</exclude>
                        <exclude>com.tui.track.github.activities.wrapper.impl.TrackGithubActivitiesImpl.java</exclude>
                        <!-- Exclude full package from test coverage -->
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <skip>false</skip>
                    <excludes>
                        <!-- Exclude full package from test coverage -->
                        <excludesFile>**/TrackGithubActivitiesApplication.class</excludesFile>
                        <exclude>com/tui/track/github/activities/openapi/**/*</exclude>
                        <exclude>com/tui/track/github/activities/utils/**/*</exclude>
                        <exclude>com/tui/track/github/activities/exceptions/**/*</exclude>
                        <exclude>com/tui/track/github/activities/constant/**/*</exclude>
                        <exclude>com/tui/track/github/activities/enums/**/*</exclude>
                        <exclude>com/tui/track/github/activities/wrapper/impl/TrackGithubActivitiesImpl.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data.-->
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                            <!--  Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.limit}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>pipeline</id>
            <build>
                <directory>../target</directory>
            </build>
        </profile>

        <profile>
            <id>java11</id>
            <activation>
                <jdk>[11,)</jdk>
            </activation>
        </profile>

        <profile>
            <id>docker-integration-tests</id>
            <properties>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/test/resources/</directory>
                    </resource>
                    <resource>
                        <directory>src/main/resources/</directory>
                    </resource>
                </resources>
                <testResources>
                    <testResource>
                        <directory>src/test/resources/</directory>
                        <includes>
                            <include>com/tui/track/github/features/</include>
                        </includes>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <profiles>
                                <profile>docker-integration-tests</profile>
                            </profiles>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <compilerArgument>-parameters</compilerArgument>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <configuration>
                            <showLogs>true</showLogs>
                            <verbose>true</verbose>
                            <autoCreateCustomNetworks>${docker-auto-create-networks}
                            </autoCreateCustomNetworks>
                            <images>
                                <image>
                                    <name>integration/${docker-wiremock-container-name}</name>
                                    <alias>${docker-wiremock-container-name}</alias>
                                    <build>
                                        <contextDir>${project.basedir}</contextDir>
                                        <dockerFile>wiremock.Dockerfile</dockerFile>
                                        <args>
                                            <exposedPort>${docker-wiremock-container-port}
                                            </exposedPort>
                                        </args>
                                    </build>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <network>
                                            <name>${docker-network-name}</name>
                                            <alias>${docker-network-name}</alias>
                                        </network>
                                        <wait>
                                            <time>25000</time>
                                            <healthy>true</healthy>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>integration/${project.name}</name>
                                    <alias>${project.name}</alias>
                                    <build>
                                        <contextDir>${project.basedir}</contextDir>
                                        <dockerFile>service.Dockerfile</dockerFile>
                                        <assembly>
                                            <descriptorRef>artifact</descriptorRef>
                                            <name>target</name>
                                        </assembly>
                                        <filter>@</filter>
                                        <args>
                                            <buildVersion>${project.version}</buildVersion>
                                            <springProfile>docker-integration-tests</springProfile>
                                            <serviceName>${project.name}</serviceName>
                                        </args>
                                    </build>
                                    <run>
                                        <hostname>${project.name}</hostname>
                                        <network>
                                            <name>${docker-network-name}</name>
                                            <alias>${docker-network-name}</alias>
                                        </network>
                                        <ports>
                                            <port>
                                                ${docker-service-exposed-port}:${docker-service-container-port}
                                            </port>
                                        </ports>
                                        <dependsOn>
                                            <container>${docker-wiremock-container-name}</container>
                                        </dependsOn>
                                        <namingStrategy>alias</namingStrategy>
                                        <wait>
                                            <time>50000</time>
                                            <healthy>true</healthy>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clean</id>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>remove</goal>
                                </goals>
                                <phase>clean</phase>
                            </execution>
                            <execution>
                                <id>build</id>
                                <goals>
                                    <!-- "build" should be used to create the images with the artifact -->
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>start</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>remove</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                            <testSourceDirectory>${dynamicTestSourceDirectory}</testSourceDirectory>
                            <!-- We dont need surefire to execute at the time of Integration test, so overriding the global surefire plugin by setting skipTests true-->
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <environmentHost>localhost</environmentHost>
                                <environmentPort>8082</environmentPort>
                                <!--IMPORTANT :  failsafe plugin will not read any property files -->
                                <!-- It will ignore the values from junit-platform.properties, so you have to provide it-->
                                <spring.profiles.active>docker-integration-tests</spring.profiles.active>
                                <cucumber.filter.tags>@regression</cucumber.filter.tags>
                                <cucumber.plugin>html:target/jsonReports/cucumber-report.html,
                                    json:target/jsonReports/cucumber.json, junit:target/jsonReports/cucumber.xml, junit
                                </cucumber.plugin>
                            </systemPropertyVariables>
                            <parallel>none</parallel>
                            <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>
                            <classpathDependencyExcludes>
                                <classpathDependencyExcludes>${project.groupId}:${project.artifactId}
                                </classpathDependencyExcludes>
                            </classpathDependencyExcludes>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${project.build.outputDirectory}
                                </additionalClasspathElement>
                            </additionalClasspathElements>

                            <!-- parallel config starts-->
                            <!--Parallel execution configuration when u edit make sure you know what you are about to change -->
                            <!-- In JUnit the feature files are run in parallel rather than scenarios, which means all the scenarios in a feature file will be executed by the same thread-->
                            <!-- Setting the number of threads per core or <useUnlimitedThreads>true</useUnlimitedThreads> to override this-->
                            <threadCount>4</threadCount>
                            <!-- Set the thread number per core or for the entire run -->
                            <!--false means this will create max threads mentioned in the threadCount tag for complete the process-->
                            <!--<perCoreThreadCount>true</perCoreThreadCount>-->
                            <!--<useUnlimitedThreads>false</useUnlimitedThreads>-->
                            <!-- In case of multiple runners one can also set the parallel option to classesAndMethods or classes in addition to methods.-->
                            <parallel>classes</parallel>
                        </configuration>
                        <executions>
                            <execution>
                                <id>failsafe-integration-tests</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <!-- failsafe:integration-test runs the integration tests of an application. -->
                                    <goal>integration-test</goal>
                                    <!-- failsafe:verify verifies that the integration tests of an application passed. -->
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.masterthought</groupId>
                        <artifactId>maven-cucumber-reporting</artifactId>
                        <version>${maven-cucumber-reporting.version}</version>
                        <executions>
                            <execution>
                                <id>execution-track-github-api</id>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <!-- report generation is happening at this phase, so please dont change-->
                                <phase>integration-test</phase>
                                <configuration>
                                    <projectName>${project.name}</projectName>
                                    <skip>false</skip>
                                    <!-- output directory for the generated report -->
                                    <outputDirectory>${project.build.directory}/jsonReports/NewHtmlReports
                                    </outputDirectory>
                                    <!-- optional, defaults to outputDirectory if not specified -->
                                    <inputDirectory>${project.build.directory}/jsonReports</inputDirectory>
                                    <jsonFiles>
                                        <!-- supports wildcard or name pattern -->
                                        <param>**/*.json</param>
                                    </jsonFiles>
                                    <mergeFeaturesById>false</mergeFeaturesById>
                                    <!-- optional, set true to get a final report with latest results of the same test from different test runs -->
                                    <mergeFeaturesWithRetest>false</mergeFeaturesWithRetest>
                                    <!-- optional, set true to fail build on test failures -->
                                    <checkBuildResult>false</checkBuildResult>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <testFailureIgnore>true</testFailureIgnore>
                            <testSourceDirectory>${dynamicTestSourceDirectory}</testSourceDirectory>
                            <!-- Skipping unit test as unit tests have already executed -->
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <skipTests>false</skipTests>
                            <systemPropertyVariables>
                                <environmentHost>localhost</environmentHost>
                                <environmentPort>8082</environmentPort>
                                <!--IMPORTANT : Failsafe ignores the junit-platform.properties. Therefore specifying report file list -->
                                <spring.profiles.active>docker-integration-tests</spring.profiles.active>
                                <cucumber.filter.tags>@regression</cucumber.filter.tags>
                                <cucumber.plugin>html:target/jsonReports/cucumber-report.html,
                                    json:target/jsonReports/cucumber.json, junit:target/jsonReports/cucumber.xml, pretty
                                </cucumber.plugin>
                            </systemPropertyVariables>
                            <parallel>none</parallel>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>failsafe-integration-tests</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

</project>
